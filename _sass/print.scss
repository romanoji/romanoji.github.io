@media print {
  @page {
    size: auto;
  }
}

body {
  background-color: #ffffff;
}

a {
  text-decoration: none !important;
}

.clause {
  margin-bottom: 45px;
}

//html, body {
//  width: 210mm;
//  height: 297mm;
//}

.cv {
  position: fixed;
  top: 0;
  left: 0;
  margin: 0 auto;
}

.header-wallpaper {
  width: 814px;
  height: 271px;
}

.col-print-1 {
  flex: 0 0 8.33333%;
  max-width: 8.33333%;
}

.col-print-2 {
  flex: 0 0 16.66667%;
  max-width: 16.66667%;
}

.col-print-3 {
  flex: 0 0 25%;
  max-width: 25%;
}

.col-print-4 {
  flex: 0 0 33.33333%;
  max-width: 33.33333%;
}

.col-print-5 {
  flex: 0 0 41.66667%;
  max-width: 41.66667%;
}

.col-print-6 {
  flex: 0 0 50%;
  max-width: 50%;
}

.col-print-7 {
  flex: 0 0 58.33333%;
  max-width: 58.33333%;
}

.col-print-8 {
  flex: 0 0 66.66667%;
  max-width: 66.66667%;
}

.col-print-9 {
  flex: 0 0 75%;
  max-width: 75%;
}

.col-print-10 {
  flex: 0 0 83.33333%;
  max-width: 83.33333%;
}

.col-print-11 {
  flex: 0 0 91.66667%;
  max-width: 91.66667%;
}

.col-print-12 {
  flex: 0 0 100%;
  max-width: 100%;
}

// Source: https://gist.github.com/TheSharpieOne/27f338c93d5de166ed1e35f5fc753228
// Framework print grid generation (for v4.0.0-beta.2)
//
// Used only to generate the correct number of grid classes given
// any value of `$grid-columns`.
// import bootstrap prior to this mixin to set the various variables and mixins needed/used.
//@mixin make-print-grid-columns($columns: $grid-columns, $gutter: $grid-gutter-width, $name: "pr") {
//  @media print {
//    // Common properties
//    %grid-column-print {
//      position: relative;
//      width: 100%;
//      min-height: 1px; // Prevent columns from collapsing when empty
//      padding-right: ($gutter / 2);
//      padding-left: ($gutter / 2);
//    }
//
//    // Allow columns to stretch full width below their breakpoints
//    @for $i from 1 through $columns {
//      .col-#{$name}-#{$i} {
//        @extend %grid-column-print;
//      }
//    }
//    .col-#{$name} {
//      @extend %grid-column-print;
//    }
//
//    // Provide basic `.col-{bp}` classes for equal-width flexbox columns
//    .col-#{$name} {
//      flex-basis: 0;
//      flex-grow: 1;
//      max-width: 100%;
//    }
//    .col-#{$name}-auto {
//      flex: 0 0 auto;
//      width: auto;
//    }
//
//    @for $i from 1 through $columns {
//      .col-#{$name}-#{$i} {
//        @include make-col($i, $columns);
//      }
//    }
//
//    .order-#{$name}-first {
//      order: -1;
//    }
//
//    @for $i from 1 through $columns {
//      .order-#{$name}-#{$i} {
//        order: $i;
//      }
//    }
//
//    // `$columns - 1` because offsetting by the width of an entire row isn't possible
//    @for $i from 0 through ($columns - 1) {
//      .offset-#{$name}-#{$i} {
//        @include make-col-offset($i, $columns)
//      }
//    }
//  }
//}